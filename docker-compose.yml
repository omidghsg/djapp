version: "3"

services:
    app:
        build:
            context: .
        ports:
        -   8001:8001
        -   8002:8002
        volumes:
        -   src:/src
        command: >
            sh -c "/app/start.sh"
        env_file:
        -   .env
        environment:
        -   DB_HOST=${DB_HOST}
        -   DB_NAME=${DB_NAME}
        -   DB_USER=${DB_USER}
        -   DB_PASS=${DB_PASS}
        -   DISABLE_SERVER_SIDE_CURSORS=${DISABLE_SERVER_SIDE_CURSORS}
        depends_on:
        -   db
        -   redis
        # restart: unless-stopped

    db:
        image: postgres:13-alpine
        env_file:
        -   .env
        environment:
        -   POSTGRES_DB=${POSTGRES_DB}
        -   POSTGRES_USER=${POSTGRES_USER}
        -   POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        -   PGDATA=${PGDATA}
        -   DB_VOLUME=${DB_VOLUME}
        volumes:
        -   db:/dbdata
        # restart: unless-stopped

    pgadmin:
        image: dpage/pgadmin4
        # restart: always
        ports:
        -   "5053:80"
        env_file:
        -   .env
        environment:
        -   PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
        -   PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
        volumes:
        -   pgadmindata:/var/lib/pgadmin

    redis:
        image: "redis:alpine"
        # restart: unless-stopped

    celery:
        build:
            context: .
        command: celery -A config worker -l info
        volumes:
        -   src:/src
        depends_on:
        -   db
        -   redis
        # restart: unless-stopped

    celery-beat:
        build:
            context: .
        command: celery -A config beat -l info
        volumes:
        -   src:/src
        depends_on:
        -   db
        -   redis
        # restart: unless-stopped

    celery-flower:
        build:
            context: .
        command: celery -A config flower
        ports:
        -   5555:5555
        volumes:
        -   src:/src
        depends_on:
        -   celery
        # restart: unless-stopped

volumes:
    src:
    pgadmindata:
    db:
        external: false
        name: ${DB_VOLUME}
